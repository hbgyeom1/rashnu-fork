[{"path":"https://zarathucorp.github.io/rashnu/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 rashnu authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://zarathucorp.github.io/rashnu/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sungho Choi. Author, maintainer. Gyeom Hwangbo. Contributor. . Copyright holder, funder.","code":""},{"path":"https://zarathucorp.github.io/rashnu/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Choi S (2025). rashnu: Balanced Sample Size Power Calculation Tools. R package version 0.1.2, https://github.com/zarathucorp/rashnu, https://zarathucorp.github.io/rashnu/.","code":"@Manual{,   title = {rashnu: Balanced Sample Size and Power Calculation Tools},   author = {Sungho Choi},   year = {2025},   note = {R package version 0.1.2, https://github.com/zarathucorp/rashnu},   url = {https://zarathucorp.github.io/rashnu/}, }"},{"path":"https://zarathucorp.github.io/rashnu/index.html","id":"rashnu","dir":"","previous_headings":"","what":"Balanced Sample Size and Power Calculation Tools","title":"Balanced Sample Size and Power Calculation Tools","text":"Rashnu Zoroastrian deity truth justice—one weighs souls golden scale. R package, developed Zarathu, draws inspiration Rashnu’s role divine judge offer precision fairness sample size determination. “truth weighed, science begins.” clinical trials research design, every decision matters.Rashnu helps researchers define right number participants : - Non-inferiority studies - Superiority comparisons (Lakatos method) - One-arm survival designs transformation-based inference package brings clarity, rigor, justice design process.","code":""},{"path":"https://zarathucorp.github.io/rashnu/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Balanced Sample Size and Power Calculation Tools","text":"can install stable version rashnu CRAN : access latest development version, install GitHub :","code":"install.packages(\"rashnu\") # install.packages(\"pak\") pak::pak(\"zarathucorp/rashnu\")"},{"path":[]},{"path":"https://zarathucorp.github.io/rashnu/index.html","id":"rstudio-addins","dir":"","previous_headings":"Example","what":"Rstudio Addins","title":"Balanced Sample Size and Power Calculation Tools","text":"Use rashnuBasic() Click Interactive Sample Size Calculator Addin","code":"rashnuBasic()"},{"path":"https://zarathucorp.github.io/rashnu/index.html","id":"two-sample-survival-non-inferiority","dir":"","previous_headings":"Example","what":"Two sample survival non-inferiority","title":"Balanced Sample Size and Power Calculation Tools","text":"","code":"twoSurvSampleSizeNI(    syear = 12,    yrsurv1 = 0.5,    yrsurv2 = 0.5,    alloc = 1,    accrualTime = 24,    followTime = 24,    alpha = 0.025,    power = 0.8,    margin = 1.3 ) $Sample_size_of_standard_group [1] 264  $Sample_size_of_test_group [1] 264  $Total_sample_size [1] 528  $Expected_event_numbers_of_standard_group [1] 227.9  $Expected_event_numbers_of_test_group [1] 227.9  $Total_expected_event_numbers [1] 455.9"},{"path":"https://zarathucorp.github.io/rashnu/index.html","id":"two-sample-survival-superiority","dir":"","previous_headings":"Example","what":"Two sample survival superiority","title":"Balanced Sample Size and Power Calculation Tools","text":"","code":"lakatosSampleSize(    syear = 12,    yrsurv1 = 0.3,    yrsurv2 = 0.5,    alloc = 1,    accrualTime = 24,    followTime = 24,    alpha = 0.05,    power = 0.8,    method = \"logrank\",    side = \"two.sided\" ) $Sample_size_of_standard_group [1] 58  $Sample_size_of_test_group [1] 58  $Total_sample_size [1] 116  $Expected_event_numbers_of_standard_group [1] 55.6  $Expected_event_numbers_of_test_group [1] 49.7  $Total_expected_event_numbers [1] 105.3  $Actual_power [1] 0.803"},{"path":"https://zarathucorp.github.io/rashnu/index.html","id":"one-sample-non-parametric-survival","dir":"","previous_headings":"Example","what":"One sample non-parametric survival","title":"Balanced Sample Size and Power Calculation Tools","text":"","code":"oneSurvSampleSize(    survTime = 12,    p1 = 0.3,    p2 = 0.4,    accrualTime = 24,    followTime = 24,    alpha = 0.05,    power = 0.8,    side = \"two.sided\",    method = \"log-log\" ) SampleSize      Power     189.000      0.802"},{"path":"https://zarathucorp.github.io/rashnu/reference/coxph_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size or Power for Cox Proportional Hazards — coxph_size","title":"Sample Size or Power for Cox Proportional Hazards — coxph_size","text":"Calculates sample size power cox proportional hazards model.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/coxph_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size or Power for Cox Proportional Hazards — coxph_size","text":"","code":"coxph_size(   hr,   hr0 = NULL,   delta = NULL,   pE,   pA,   alpha,   beta = NULL,   n = NULL,   test_type = \"2-side\" )"},{"path":"https://zarathucorp.github.io/rashnu/reference/coxph_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size or Power for Cox Proportional Hazards — coxph_size","text":"hr Numeric. True hazard ratio. hr0 Numeric (optional). Null hypothesis hazard ratio. Required \"2-side\", \"non-inferiority\" test. delta Numeric (optional). Margin \"equivalence test\". Required \"equivalence\" test. pE Numeric. Overall event probability. pA Numeric. Proportion group . alpha Numeric. Type error rate. beta Numeric (optional). Type II error rate. Required sample size calculation. n Integer (optional). Sample size. Required power calculation. test_type Character. \"2-side\", \"non-inferiority\", \"equivalence\". Default \"2-side\".","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/coxph_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size or Power for Cox Proportional Hazards — coxph_size","text":"Numeric. Returns sample size (beta given), power (n given).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/coxph_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample Size or Power for Cox Proportional Hazards — coxph_size","text":"one beta (sample size calculation) n (power calculation) specified. Required arguments test_type: \"2-side\"/\"non-inferiority: sample size: hr, hr0, pE, pA, alpha, beta power: hr, hr0, pE, pA, alpha, n \"equivalence\": sample size: hr, delta, pE, pA, alpha, beta power: hr, delta, pE, pA, alpha, n","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/coxph_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size or Power for Cox Proportional Hazards — coxph_size","text":"","code":"# Sample size for a `\"2-side\"` test coxph_size(hr = 2, hr0 = 1, pE = 0.8, pA = 0.5,            alpha = 0.05, beta = 0.2, test_type = \"2-side\") #> [1] 82  # Power of `\"2-side\"` test coxph_size(hr = 2, hr0 = 1, pE = 0.8, pA = 0.5,            alpha = 0.05, n = 82, test_type = \"2-side\") #> [1] 0.8015214  # Sample size for `\"non-inferiority\"` test coxph_size(hr = 2, hr0 = 1, pE = 0.8, pA = 0.5,            alpha = 0.025, beta = 0.2, test_type = \"non-inferiority\") #> [1] 82  # Power of `\"non-inferiority\"` test coxph_size(hr = 2, hr0 = 1, pE = 0.8, pA = 0.5,            alpha = 0.025, n = 82, test_type = \"non-inferiority\") #> [1] 0.8015214  # Sample size for `\"equivalence\"` test coxph_size(hr = 1, delta = 0.5, pE = 0.8, pA = 0.5,            alpha = 0.05, beta = 0.2, test_type = \"equivalence\") #> [1] 172  # Power of `\"equivalence\"` test coxph_size(hr = 1, delta = 0.5, pE = 0.8, pA = 0.5,            alpha = 0.05, n = 172, test_type = \"equivalence\") #> [1] 0.8021573"},{"path":"https://zarathucorp.github.io/rashnu/reference/k_mean_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size or Power Calculation for K Means — k_mean_size","title":"Sample Size or Power Calculation for K Means — k_mean_size","text":"Calculates sample size power multiple-sample mean test.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/k_mean_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size or Power Calculation for K Means — k_mean_size","text":"","code":"k_mean_size(   muA,   muB,   kappa = 1,   sd = NULL,   sdA = NULL,   sdB = NULL,   tau = 1,   alpha,   beta = NULL,   n = NULL,   nA = NULL,   test_type = \"2-side\" )"},{"path":"https://zarathucorp.github.io/rashnu/reference/k_mean_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size or Power Calculation for K Means — k_mean_size","text":"muA Numeric. True mean group . muB Numeric. True mean group B. kappa Numeric. Ratio sample sizes (nA/nB). Default 1. sd Numeric (optional). Standard deviation. Required \"2-side\" test. sdA Numeric (optional). Standard deviation group . Required \"1-side\" test. sdB Numeric (optional). Standard deviation group B. Required \"1-side\" test. tau Integer. Number comparisons. alpha Numeric. Type error rate. beta Numeric (optional). Type II error rate (1 - power). Required sample size calculation. n Integer (optional). Sample size. Required power calculation \"2-side\" test. nA Integer (optional). Sample size group . Required power calculation \"1-side\" test. test_type Character. \"2-side\" \"1-side\". Default \"2-side\"","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/k_mean_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size or Power Calculation for K Means — k_mean_size","text":"Numeric. Returns sample size (beta given), power (n/nA given).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/k_mean_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample Size or Power Calculation for K Means — k_mean_size","text":"one beta (sample size calculation) n/nA (power calculation) specified. Required arguments test_type: \"2-side\": sample size: muA, muB, sd, tau, alpha, beta power: muA, muB, sd, tau, alpha, n -\"1-side\": sample size: muA, muB, sdA, sdB, tau, alpha, beta power: muA, muB, sdA, sdB, tau, alpha, nA","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/k_mean_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size or Power Calculation for K Means — k_mean_size","text":"","code":"# Sample size for `\"2-side\"` test k_mean_size(muA = 5, muB = 10, sd = 10, tau = 1,             alpha = 0.05, beta = 0.2, test_type = \"2-side\") #> [1] 63  # Power of `\"2-side\"` test k_mean_size(muA = 5, muB = 10, sd = 10, tau = 1,             alpha = 0.05, n = 63, test_type = \"2-side\") #> [1] 0.8013024  # Sample size for `\"1-side\"` test k_mean_size(muA = 132.86, muB = 127.44, kappa = 2, sdA = 15.34, sdB = 18.23, tau = 1,             alpha = 0.05, beta = 0.2, test_type = \"1-side\") #> [1] 85  # Power of `\"1-side\"` test k_mean_size(muA = 132.86, muB = 127.44, kappa = 2, sdA = 15.34, sdB = 18.23, tau = 1,             alpha = 0.05, nA = 85, test_type = \"1-side\") #> [1] 0.8020669"},{"path":"https://zarathucorp.github.io/rashnu/reference/k_prop_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size or Power Calculation for K proportion — k_prop_size","title":"Sample Size or Power Calculation for K proportion — k_prop_size","text":"Calculates sample size power multiple-sample proportion test.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/k_prop_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size or Power Calculation for K proportion — k_prop_size","text":"","code":"k_prop_size(pA, pB, tau, alpha, beta = NULL, n = NULL)"},{"path":"https://zarathucorp.github.io/rashnu/reference/k_prop_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size or Power Calculation for K proportion — k_prop_size","text":"pA Numeric. True proportion group . pB Numeric. True proportion group B. tau Integer. Number comparisons. alpha Numeric. Type error rate. beta Numeric (optional). Type II error rate. Required sample size calculation. n Integer (optional). Sample size. Required calculating power.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/k_prop_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size or Power Calculation for K proportion — k_prop_size","text":"Returns sample size (beta given), power (n given).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/k_prop_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample Size or Power Calculation for K proportion — k_prop_size","text":"one beta (sample size calculation) n (power calculation) specified. Required arguments: sample size: pA, pB, tau, alpha, beta power: pA, pB, tau, alpha, n","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/k_prop_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size or Power Calculation for K proportion — k_prop_size","text":"","code":"# Sample size k_prop_size(pA = 0.2, pB = 0.4, tau = 2,             alpha = 0.05, beta = 0.2) #> [1] 96  # Power k_prop_size(pA = 0.2, pB = 0.4, tau = 2,             alpha = 0.05, n = 96) #> [1] 0.8042732"},{"path":"https://zarathucorp.github.io/rashnu/reference/lakatosSampleSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size Calculation Using Lakatos Method for Survival Analysis — lakatosSampleSize","title":"Sample Size Calculation Using Lakatos Method for Survival Analysis — lakatosSampleSize","text":"Computes required sample size expected event numbers two-group survival analysis using Lakatos' method exponential survival assumptions varying weight functions (log-rank, Gehan, Tarone-Ware).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/lakatosSampleSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size Calculation Using Lakatos Method for Survival Analysis — lakatosSampleSize","text":"","code":"lakatosSampleSize(   syear,   yrsurv1,   yrsurv2,   alloc,   accrualTime,   followTime,   alpha,   power,   method = c(\"logrank\", \"gehan\", \"tarone-ware\"),   side = c(\"two.sided\", \"one.sided\"),   b = 24 )"},{"path":"https://zarathucorp.github.io/rashnu/reference/lakatosSampleSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size Calculation Using Lakatos Method for Survival Analysis — lakatosSampleSize","text":"syear Survival time horizon years. yrsurv1 Survival probability standard group syear. yrsurv2 Survival probability test group syear. alloc Allocation ratio (Test / Standard). equal allocation, use 1. accrualTime Accrual period duration. followTime Additional follow-time last patient accrued. alpha Significance level (e.g., 0.05 two-sided tests). power Desired statistical power (e.g., 0.8). method Weighting method test statistic. One \"logrank\", \"gehan\", \"tarone-ware\". side Type test: \"two.sided\" \"one.sided\". b Number time divisions per year numerical integration (default = 24).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/lakatosSampleSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size Calculation Using Lakatos Method for Survival Analysis — lakatosSampleSize","text":"list containing: Sample_size_of_standard_group Required sample size standard group. Sample_size_of_test_group Required sample size test group. Total_sample_size Total sample size. Expected_event_numbers_of_standard_group Expected number events standard group. Expected_event_numbers_of_test_group Expected number events test group. Total_expected_event_numbers Total number expected events. Actual_power Achieved power given calculated sample size. error (Optional) Error message sample size calculated.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/lakatosSampleSize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample Size Calculation Using Lakatos Method for Survival Analysis — lakatosSampleSize","text":"Lakatos E. (1988). Sample sizes based log-rank statistic complex clinical trials. Biometrics, 44, 229–241. Lakatos E, Lan KK. (1992). comparison sample size methods logrank statistic. Statistics Medicine, 11(2), 179–191. Web calculator (Superiority): https://nshi.jp/en/js/twosurvyr/","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/lakatosSampleSize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size Calculation Using Lakatos Method for Survival Analysis — lakatosSampleSize","text":"","code":"lakatosSampleSize(   syear = 2,   yrsurv1 = 0.7,   yrsurv2 = 0.6,   alloc = 1,   accrualTime = 1,   followTime = 1,   alpha = 0.05,   power = 0.8,   method = \"logrank\",   side = \"two.sided\" ) #> $Sample_size_of_standard_group #> [1] 446 #>  #> $Sample_size_of_test_group #> [1] 446 #>  #> $Total_sample_size #> [1] 892 #>  #> $Expected_event_numbers_of_standard_group #> [1] 104.7 #>  #> $Expected_event_numbers_of_test_group #> [1] 141.8 #>  #> $Total_expected_event_numbers #> [1] 246.5 #>  #> $Actual_power #> [1] 0.8 #>"},{"path":"https://zarathucorp.github.io/rashnu/reference/oneSurvSampleSize.html","id":null,"dir":"Reference","previous_headings":"","what":"One-Sample Survival Study Sample Size or Power Calculation — oneSurvSampleSize","title":"One-Sample Survival Study Sample Size or Power Calculation — oneSurvSampleSize","text":"Calculates required sample size power single-arm survival study using various transformation-based methods, including arcsine-square root, log-log, logit, others. function assumes exponential survival model.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/oneSurvSampleSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-Sample Survival Study Sample Size or Power Calculation — oneSurvSampleSize","text":"","code":"oneSurvSampleSize(   survTime,   p1,   p2,   accrualTime,   followTime,   alpha,   power,   side = c(\"two.sided\", \"one.sided\"),   method = c(\"arcsin\", \"log-log\", \"logit\", \"log\", \"log-swog\", \"identity\") )"},{"path":"https://zarathucorp.github.io/rashnu/reference/oneSurvSampleSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-Sample Survival Study Sample Size or Power Calculation — oneSurvSampleSize","text":"survTime Time point survival evaluated (e.g., median follow-time). p1 Expected survival probability alternative hypothesis. p2 Survival probability null hypothesis. accrualTime Patient accrual period. followTime Additional follow-period accrual ends. alpha Significance level (e.g., 0.05). power Desired statistical power (e.g., 0.8). side Type hypothesis test. Either \"two.sided\" (default) \"one.sided\". method Transformation method comparison. One \"arcsin\", \"log-log\", \"logit\", \"log\", \"log-swog\", \"identity\".","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/oneSurvSampleSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One-Sample Survival Study Sample Size or Power Calculation — oneSurvSampleSize","text":"named numeric vector : SampleSize Calculated required sample size. Power Achieved power calculated sample size.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/oneSurvSampleSize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"One-Sample Survival Study Sample Size or Power Calculation — oneSurvSampleSize","text":"Fleming TR, Harrington DP. (1991). Counting Processes Survival Analysis. New York: Wiley, pp. 236–237, Example 6.3.1. Andersen PK, Borgan O, Gill RD, Keiding N. (1993). Statistical Models Based Counting Processes. New York: Springer-Verlag, pp. 176–287, Section IV.1–3. Bie O, Borgan O, Liestol K. (1987). Confidence intervals confidence bands cumulative hazard rate function small sample properties. Scandinavian Journal Statistics, 14(3), 221–233. Borgan O, Liestol K. (1990). note confidence intervals bands survival function based transformations. Scandinavian Journal Statistics, 17(1), 35–41. Nagashima K, Noma H, Sato Y, Gosho M. (2020). Sample size calculations single-arm survival studies using transformations Kaplan–Meier estimator. Pharmaceutical Statistics. https://doi.org/10.1002/pst.2090 Available : https://arxiv.org/abs/2012.03355 Web calculator (One-sample): https://nshi.jp/en/js/onesurvyr/","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/oneSurvSampleSize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One-Sample Survival Study Sample Size or Power Calculation — oneSurvSampleSize","text":"","code":"oneSurvSampleSize(   survTime = 2,   p1 = 0.75,   p2 = 0.6,   accrualTime = 1,   followTime = 1,   alpha = 0.05,   power = 0.8,   side = \"two.sided\",   method = \"log-log\" ) #> SampleSize      Power  #>        Inf        NaN"},{"path":"https://zarathucorp.github.io/rashnu/reference/one_bino_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size or Power for One-Sample Binomial Proportion Test — one_bino_size","title":"Sample Size or Power for One-Sample Binomial Proportion Test — one_bino_size","text":"Calculates sample size power two-sample binomial proportion test.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_bino_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size or Power for One-Sample Binomial Proportion Test — one_bino_size","text":"","code":"one_bino_size(p, p0, alpha, beta = NULL, n = NULL)"},{"path":"https://zarathucorp.github.io/rashnu/reference/one_bino_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size or Power for One-Sample Binomial Proportion Test — one_bino_size","text":"p Numeric. True proportion. p0 Numeric. Null hypothesis proportion. alpha Numeric. Type error rate. beta Numeric (optional). Type II error rate. Required sample size calculation. n Integer (optional). Sample size. Required power calculation.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_bino_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size or Power for One-Sample Binomial Proportion Test — one_bino_size","text":"Numeric. Returns sample size (beta given), power (n given).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_bino_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample Size or Power for One-Sample Binomial Proportion Test — one_bino_size","text":"one beta (sample size calculation) n (power calculation) specified. Required arguments: sample size: \"p\", \"p0\", \"alpha\", \"beta\" power: \"p\", \"p0\", \"alpha\", \"n\"","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_bino_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size or Power for One-Sample Binomial Proportion Test — one_bino_size","text":"","code":"# Required sample size one_bino_size(p = 0.5, p0 = 0.3,               alpha = 0.05, beta = 0.2) #> [1] 50  # Power one_bino_size(p = 0.5, p0 = 0.3,               alpha = 0.05, n = 50) #> [1] 0.8074304"},{"path":"https://zarathucorp.github.io/rashnu/reference/one_mean_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size or Power for One-Sample Mean Test — one_mean_size","title":"Sample Size or Power for One-Sample Mean Test — one_mean_size","text":"Calculates sample size power one-sample mean test.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_mean_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size or Power for One-Sample Mean Test — one_mean_size","text":"","code":"one_mean_size(   mu,   mu0,   delta = NULL,   sd,   alpha,   beta = NULL,   n = NULL,   test_type = \"2-side\" )"},{"path":"https://zarathucorp.github.io/rashnu/reference/one_mean_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size or Power for One-Sample Mean Test — one_mean_size","text":"mu Numeric. True mean. mu0 Numeric. Null hypothesis mean. delta Numeric (optional). Margin \"non-inferiority\" \"equivalence\" test. Required \"non-inferiority\" \"equivalence\" test. sd Numeric. Standard deviation. alpha Numeric. Type error rate. beta Numeric (optional). Type II error rate. Required sample size calculation. n Integer (optional). Sample size. Required power calculation. test_type Character. \"2-side\", \"1-side\", \"non-inferiority\", \"equivalence\". Default \"2-side\".","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_mean_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size or Power for One-Sample Mean Test — one_mean_size","text":"Numeric. Returns sample size (beta given), power (n given).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_mean_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample Size or Power for One-Sample Mean Test — one_mean_size","text":"one beta (sample size calculation) n (power calculation) specified. Required arguments test_type: \"2-side\" / \"1-side\": sample size: mu, mu0, sd, alpha, beta power: mu, mu0, sd, alpha, n \"non-inferiority\" / \"equivalence\": sample size: mu, mu0, delta, sd, alpha, beta power: mu, mu0, delta, sd, alpha, n","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_mean_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size or Power for One-Sample Mean Test — one_mean_size","text":"","code":"# Sample size for `\"2-side\"` test one_mean_size(mu = 2, mu0 = 1.5, sd = 1,               alpha = 0.05, beta = 0.2, test_type = \"2-side\") #> [1] 32  # Power of `\"2-side\"` test one_mean_size(mu = 2, mu0 = 1.5, sd = 1,               alpha = 0.05, n = 32, test_type = \"2-side\") #> [1] 0.8074304  # Sample size for `\"1-side\"` test one_mean_size(mu = 115, mu0 = 120, sd = 24,               alpha = 0.05, beta = 0.2, test_type = \"1-side\") #> [1] 143  # Power of `\"1-side\"` test one_mean_size(mu = 115, mu0 = 120, sd = 24,               alpha = 0.05, n = 143, test_type = \"1-side\") #> [1] 0.8013493  # Sample size for `\"non-inferiority\"` test one_mean_size(mu = 2, mu0 = 1.5, delta = -0.5, sd = 1,               alpha = 0.05, beta = 0.2, test_type = \"non-inferiority\") #> [1] 7  # Power of `\"non-inferiority\"` test one_mean_size(mu = 2, mu0 = 1.5, delta = -0.5, sd = 1,               alpha = 0.05, n = 7, test_type = \"non-inferiority\") #> [1] 0.8415708  # Sample size for `\"equivalence\"` test one_mean_size(mu = 2, mu0 = 2, delta = 0.05, sd = 0.1,               alpha = 0.05, beta = 0.2, test_type = \"equivalence\") #> [1] 35  # Power of `\"equivalence\"` test one_mean_size(mu = 2, mu0 = 2, delta = 0.05, sd = 0.1,               alpha = 0.05, n = 35, test_type = \"equivalence\") #> [1] 0.810884"},{"path":"https://zarathucorp.github.io/rashnu/reference/one_norm_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size or Power Calculation for One-Sample Normal Mean Test — one_norm_size","title":"Sample Size or Power Calculation for One-Sample Normal Mean Test — one_norm_size","text":"Calculates sample size power two-sample normal mean test.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_norm_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size or Power Calculation for One-Sample Normal Mean Test — one_norm_size","text":"","code":"one_norm_size(mu, mu0, sd, alpha, beta = NULL, n = NULL)"},{"path":"https://zarathucorp.github.io/rashnu/reference/one_norm_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size or Power Calculation for One-Sample Normal Mean Test — one_norm_size","text":"mu Numeric. True mean. mu0 Numeric. Null hypothesis mean. sd Numeric. Standard deviation. alpha Numeric. Type error rate. beta Numeric (optional). Type II error rate. Required sample size calculation. n Integer (optional). Sample size. Required power calculation.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_norm_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size or Power Calculation for One-Sample Normal Mean Test — one_norm_size","text":"Numeric. Returns sample size (beta given), power (n given).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_norm_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample Size or Power Calculation for One-Sample Normal Mean Test — one_norm_size","text":"one beta (sample size calculation) n (power calculation) specified. Required arguments: sample size: \"mu\", \"mu0\", \"sd\", \"alpha\", \"beta\" power: \"mu\", \"mu0\", \"sd\", \"alpha\", \"n\"","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_norm_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size or Power Calculation for One-Sample Normal Mean Test — one_norm_size","text":"","code":"# Sample size one_norm_size(mu = 2, mu0 = 1.5, sd = 1,               alpha = 0.05, beta = 0.2) #> [1] 32  # Power one_norm_size(mu = 2, mu0 = 1.5, sd = 1,               alpha = 0.05, n = 32) #> [1] 0.8074304"},{"path":"https://zarathucorp.github.io/rashnu/reference/one_prop_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size or Power for One-Sample Proportion Test — one_prop_size","title":"Sample Size or Power for One-Sample Proportion Test — one_prop_size","text":"Calculates sample size power one-sample proportion test.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_prop_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size or Power for One-Sample Proportion Test — one_prop_size","text":"","code":"one_prop_size(   p,   p0,   delta = NULL,   alpha,   beta = NULL,   n = NULL,   test_type = \"2-side\" )"},{"path":"https://zarathucorp.github.io/rashnu/reference/one_prop_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size or Power for One-Sample Proportion Test — one_prop_size","text":"p Numeric. True proportion. p0 Numeric. Null hypothesis proportion. delta Numeric (optional). Margin \"non-inferiority\" \"equivalence\" test. Required \"non-inferiority\" \"equivalence\" test. alpha Numeric. Type error rate. beta Numeric (optional). Type II error rate. Required sample size calculation. n Integer (optional). Sample size. Required power calculation. test_type Character. \"2-side\", \"1-side\", \"non-inferiority\", \"equivalence\". Default \"2-side\".","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_prop_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size or Power for One-Sample Proportion Test — one_prop_size","text":"Numeric. Returns sample size (beta given), power (n given).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_prop_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample Size or Power for One-Sample Proportion Test — one_prop_size","text":"one beta (sample size calculation) n (power calculation) specified. Required arguments test_type: \"2-side\"/\"1-side: sample size: p, p0, alpha, beta power: p, p0, alpha, n \"non-inferiority\"/\"equivalence\": sample size: p, p0, delta, alpha, beta power: p, p0, sdA, delta, alpha, n","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/one_prop_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size or Power for One-Sample Proportion Test — one_prop_size","text":"","code":"# Sample size for `\"2-side\"` test one_prop_size(p = 0.5, p0 = 0.3,               alpha = 0.05, beta = 0.2, test_type = \"2-side\") #> [1] 50  # Power of `\"2-side\"` test one_prop_size(p = 0.5, p0 = 0.3,               alpha = 0.05, n = 50, test_type = \"2-side\") #> [1] 0.8074304  # Sample size for `\"1-side\"` test one_prop_size(p = 0.05, p0 = 0.02,               alpha = 0.05, beta = 0.2, test_type = \"1-side\") #> [1] 191  # Power of `\"1-sided\"` test one_prop_size(p = 0.05, p0 = 0.02,               alpha = 0.05, n = 191, test_type = \"1-side\") #> [1] 0.8011562  # Sample size for `\"non-inferiority\"` test one_prop_size(p = 0.5, p0 = 0.3, delta = -0.1,               alpha = 0.05, beta = 0.2, test_type = \"non-inferiority\") #> [1] 18  # Power of `\"non-inferiority\"` test one_prop_size(p = 0.5, p0 = 0.3, delta = -0.1,               alpha = 0.05, n = 18, test_type = \"non-inferiority\") #> [1] 0.8161482  # Sample size for `\"equivalence\"` test one_prop_size(p = 0.6, p0 = 0.6, delta = 0.2,               alpha = 0.05, beta = 0.2, test_type = \"equivalence\") #> [1] 52  # Power of `\"equivalence\"` test one_prop_size(p = 0.6, p0 = 0.6, delta = 0.2,               alpha = 0.05, n = 52, test_type = \"equivalence\") #> [1] 0.8060834"},{"path":"https://zarathucorp.github.io/rashnu/reference/or_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size or Power for Odds Ratio Test — or_size","title":"Sample Size or Power for Odds Ratio Test — or_size","text":"Calculates sample size power odds ratio test.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/or_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size or Power for Odds Ratio Test — or_size","text":"","code":"or_size(   pA,   pB,   delta = NULL,   kappa = 1,   alpha,   beta = NULL,   nB = NULL,   test_type = \"equality\" )"},{"path":"https://zarathucorp.github.io/rashnu/reference/or_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size or Power for Odds Ratio Test — or_size","text":"pA Numeric. True proportion group . pB Numeric. True proportion group B. delta Numeric (optional). Margin \"non-inferiority\" \"equivalence\" test. Required \"non-inferiority\" \"equivalence\" test. kappa Numeric. Ratio sample sizes (nA/nB). Default 1. alpha Numeric. Type error rate. beta Numeric (optional). Type II error rate. Required sample size calculation. nB Integer (optional). Sample size group B. Required power calculation. test_type Character. \"equality\", \"non-inferiority\", \"equivalence\". Default \"2-side\".","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/or_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size or Power for Odds Ratio Test — or_size","text":"Numeric. Returns sample size (beta given), power (nB given).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/or_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample Size or Power for Odds Ratio Test — or_size","text":"one beta (sample size calculation) nB (power calculation) specified. Required arguments test_type: \"equality\": sample size: pA, pB, alpha, beta power: pA, pB, alpha, nB \"non-inferiority\"/\"equivalence\": sample size: pA, pB, delta,  alpha, beta power: pA, pB, delta, alpha, nB","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/or_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size or Power for Odds Ratio Test — or_size","text":"","code":"# Sample size for `\"equality\"` test or_size(pA = 0.4, pB = 0.25, kappa = 1,         alpha = 0.05, beta = 0.2, test_type = \"equality\") #> [1] 156  # Power of `\"equality\"` test or_size(pA = 0.4, pB = 0.25, kappa = 1,         alpha = 0.05, nB = 156, test_type = \"equality\") #> [1] 0.8020239  # Sample size for `\"non-inferiority\"` test or_size(pA = 0.4, pB = 0.25, delta = 0.2, kappa = 1,         alpha = 0.05, beta = 0.2, test_type = \"non-inferiority\") #> [1] 242  # Power of `\"non-inferiority\"` test or_size(pA = 0.4, pB = 0.25, delta = 0.2, kappa = 1,         alpha = 0.05, nB = 242, test_type = \"non-inferiority\") #> [1] 0.8007201  # Sample size for `\"equivalence\"` test or_size(pA = 0.25, pB = 0.25, delta = 0.5, kappa = 1,         alpha = 0.05, beta = 0.2, test_type = \"equivalence\") #> [1] 366  # Power of `\"equivalence\"` test or_size(pA = 0.25, pB = 0.25, delta = 0.5, kappa = 1,         alpha = 0.05, nB = 366, test_type = \"equivalence\") #> [1] 0.8008593"},{"path":"https://zarathucorp.github.io/rashnu/reference/pair_prop_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size or Power for Paired-Sample Proportion Test — pair_prop_size","title":"Sample Size or Power for Paired-Sample Proportion Test — pair_prop_size","text":"Calculates sample size power paired-sample proportion test.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/pair_prop_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size or Power for Paired-Sample Proportion Test — pair_prop_size","text":"","code":"pair_prop_size(p01, p10, alpha, beta = NULL, n = NULL, test_type = \"2-side\")"},{"path":"https://zarathucorp.github.io/rashnu/reference/pair_prop_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size or Power for Paired-Sample Proportion Test — pair_prop_size","text":"p01 Numeric. Proportion discordant pairs (= 1, = 0). p10 Numeric. Proportion discordant pairs (= 0, = 1). alpha Numeric. Type error rate. beta Numeric (optional). Type II error rate. Required sample size calculation. n Integer (optional). Sample size. Required power calculation. test_type Character. \"2-side\" \"1-side\". Default \"2-side\".","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/pair_prop_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size or Power for Paired-Sample Proportion Test — pair_prop_size","text":"Numeric. Returns sample size (beta given), power (n given).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/pair_prop_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample Size or Power for Paired-Sample Proportion Test — pair_prop_size","text":"one beta (sample size calculation) n (power calculation) specified. Required arguments: sample size: p01, p10, alpha, beta power: p01, p10, alpha, n","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/pair_prop_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size or Power for Paired-Sample Proportion Test — pair_prop_size","text":"","code":"# Sample size for `\"2-side\"` test pair_prop_size(p01 = 0.45, p10 = 0.05,                alpha = 0.1, beta = 0.1, test_type = \"2-side\") #> [1] 23  # Power of `\"2-side\"` test pair_prop_size(p01 = 0.45, p10 = 0.05,                alpha = 0.1, n = 23, test_type = \"2-side\") #> [1] 0.9023805  # Sample size for `\"1-side\"` test pair_prop_size(p01 = 0.45, p10 = 0.05,                alpha = 0.05, beta = 0.1, test_type = \"1-side\") #> [1] 23  # Power of `\"1-side\"` test pair_prop_size(p01 = 0.45, p10 = 0.05,                alpha = 0.05, n = 23, test_type = \"1-side\") #> [1] 0.9023805"},{"path":"https://zarathucorp.github.io/rashnu/reference/rashnuBasic.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive Sample Size Calculator for Survival Studies (Shiny App) — rashnuBasic","title":"Interactive Sample Size Calculator for Survival Studies (Shiny App) — rashnuBasic","text":"Launches Shiny web application calculates required sample sizes expected event numbers different types survival analysis designs: Two-group Non-Inferiority Two-group Superiority (Lakatos method) One-sample survival test (transformation methods)","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/rashnuBasic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive Sample Size Calculator for Survival Studies (Shiny App) — rashnuBasic","text":"","code":"rashnuBasic()"},{"path":"https://zarathucorp.github.io/rashnu/reference/rashnuBasic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive Sample Size Calculator for Survival Studies (Shiny App) — rashnuBasic","text":"Launches Shiny app default browser.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/rashnuBasic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interactive Sample Size Calculator for Survival Studies (Shiny App) — rashnuBasic","text":"Users can specify survival probabilities, accrual follow-durations, allocation ratios, non-inferiority margins, transformation methods, test types. app dynamically adjusts input UI based selected design displays results data table format. Test Types: \"ni\" - Non-Inferiority (two-group exponential survival comparison) \"sup\" - Superiority (Lakatos method logrank/Gehan/Tarone-Ware weighting) \"one\" - One-sample survival test multiple transformation options Included References: Jung SH, Chow SC. Journal Biopharmaceutical Statistics, 2012. Lakatos E. Biometrics, 1988. Lakatos & Lan. Statistics Medicine, 1992. Fleming & Harrington. Counting Processes Survival Analysis, 1991. Borgan 0, Andersen PK et al. Springer-Verlag, 1993. Nagashima et al. Pharmaceutical Statistics, 2020.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/rashnuBasic.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Interactive Sample Size Calculator for Survival Studies (Shiny App) — rashnuBasic","text":"Requires associated functions twoSurvSampleSizeNI(), lakatosSampleSize(), oneSurvSampleSize() defined environment. Assumes CSS file available \"www/style.css\" custom styling.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/rashnuBasic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive Sample Size Calculator for Survival Studies (Shiny App) — rashnuBasic","text":"","code":"if (interactive()) {   rashnuBasic() }"},{"path":"https://zarathucorp.github.io/rashnu/reference/sccs_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size or Power for Self-Controlled Case Series (SCCS) — sccs_size","title":"Sample Size or Power for Self-Controlled Case Series (SCCS) — sccs_size","text":"Calculates sample size power self-controlled case series studies.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/sccs_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size or Power for Self-Controlled Case Series (SCCS) — sccs_size","text":"","code":"sccs_size(p, r, alpha, beta = NULL, n = NULL)"},{"path":"https://zarathucorp.github.io/rashnu/reference/sccs_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size or Power for Self-Controlled Case Series (SCCS) — sccs_size","text":"p Numeric. True relative incidence (risk period vs baseline). r Numeric. Proportion observation time risk period. alpha Numeric. Type error rate. beta Numeric (optional). Type II error rate. Required sample size calculation. n Integer (optional). Sample size. Required power calculation.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/sccs_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size or Power for Self-Controlled Case Series (SCCS) — sccs_size","text":"Numeric. Returns sample size (beta given), power (n given).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/sccs_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample Size or Power for Self-Controlled Case Series (SCCS) — sccs_size","text":"one beta (sample size calculation) n (power calculation) specified. Required arguments: sample size: p, r, alpha, beta power: p, r, alpha, n","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/sccs_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size or Power for Self-Controlled Case Series (SCCS) — sccs_size","text":"","code":"# Sample size sccs_size(p = 3, r = 42/365,           alpha = 0.05, beta = 0.2) #> [1] 54  # Power sccs_size(p = 3, r = 42/365,           alpha = 0.05, n = 54) #> [1] 0.8072004"},{"path":"https://zarathucorp.github.io/rashnu/reference/twoSurvSampleSizeNI.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size Calculation for Two-Group Non-Inferiority Survival Study — twoSurvSampleSizeNI","title":"Sample Size Calculation for Two-Group Non-Inferiority Survival Study — twoSurvSampleSizeNI","text":"Calculates required sample size expected event numbers non-inferiority trial two survival curves, using piecewise integration hazard functions exponential survival assumptions.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/twoSurvSampleSizeNI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size Calculation for Two-Group Non-Inferiority Survival Study — twoSurvSampleSizeNI","text":"","code":"twoSurvSampleSizeNI(   syear,   yrsurv1,   yrsurv2,   alloc,   accrualTime,   followTime,   alpha,   power,   margin )"},{"path":"https://zarathucorp.github.io/rashnu/reference/twoSurvSampleSizeNI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size Calculation for Two-Group Non-Inferiority Survival Study — twoSurvSampleSizeNI","text":"syear Survival time horizon (e.g., median survival time) years. yrsurv1 Survival probability standard group syear. yrsurv2 Survival probability test group syear. alloc Allocation ratio (Test / Standard), e.g., 1 means equal allocation. accrualTime Duration patient accrual period. followTime Follow-period last patient accrued. alpha One-sided significance level (e.g., 0.025). power Desired statistical power (e.g., 0.8). margin Non-inferiority margin hazard ratio (HR).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/twoSurvSampleSizeNI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size Calculation for Two-Group Non-Inferiority Survival Study — twoSurvSampleSizeNI","text":"list containing: Sample_size_of_standard_group Required sample size standard group. Sample_size_of_test_group Required sample size test group. Total_sample_size Total sample size. Expected_event_numbers_of_standard_group Expected number events standard group. Expected_event_numbers_of_test_group Expected number events test group. Total_expected_event_numbers Total number expected events across groups.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/twoSurvSampleSizeNI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sample Size Calculation for Two-Group Non-Inferiority Survival Study — twoSurvSampleSizeNI","text":"Jung SH, Chow SC. (2012). sample size calculation comparing survival curves general hypothesis testing. Journal Biopharmaceutical Statistics, 22(3), 485–495. Web calculator (Non-Inferiority): https://nshi.jp/en/js/twosurvyrni/","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/twoSurvSampleSizeNI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size Calculation for Two-Group Non-Inferiority Survival Study — twoSurvSampleSizeNI","text":"","code":"twoSurvSampleSizeNI(   syear = 2,   yrsurv1 = 0.7,   yrsurv2 = 0.65,   alloc = 1,   accrualTime = 1,   followTime = 1,   alpha = 0.025,   power = 0.8,   margin = 1.3 ) #> $Sample_size_of_standard_group #> [1] 11501 #>  #> $Sample_size_of_test_group #> [1] 11501 #>  #> $Total_sample_size #> [1] 23002 #>  #> $Expected_event_numbers_of_standard_group #> [1] 2691.2 #>  #> $Expected_event_numbers_of_test_group #> [1] 3162.4 #>  #> $Total_expected_event_numbers #> [1] 5853.6 #>"},{"path":"https://zarathucorp.github.io/rashnu/reference/two_mean_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size or Power for Two-Sample Mean Test — two_mean_size","title":"Sample Size or Power for Two-Sample Mean Test — two_mean_size","text":"Calculates sample size power two-sample mean test.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/two_mean_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size or Power for Two-Sample Mean Test — two_mean_size","text":"","code":"two_mean_size(   muA,   muB,   delta = NULL,   kappa = 1,   sd = NULL,   sdA = NULL,   sdB = NULL,   alpha,   beta = NULL,   nA = NULL,   nB = NULL,   test_type = \"2-side\" )"},{"path":"https://zarathucorp.github.io/rashnu/reference/two_mean_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size or Power for Two-Sample Mean Test — two_mean_size","text":"muA Numeric. True mean group . muB Numeric. True mean group B. delta Numeric (optional). Margin \"non-inferiority\" \"equivalence test\". Required \"non-inferiority\" \"equivalence\" test. kappa Numeric. Ratio sample sizes (nA/nB). Default 1. sd Numeric (optional). Standard deviation. Required \"2-side\", \"non-inferiority\" \"equivalence\" test. sdA Numeric (optional). Standard deviation group . Required \"1-side\" test. sdB Numeric (optional). Standard deviation group B. Required \"1-side\" test. alpha Numeric. Type error rate. beta Numeric (optional). Type II error rate. Required sample size calculation. nA Integer (optional). Sample size group . Required power calculation \"1-side\" test. nB Integer (optional). Sample size group B. Required power calculation \"2-side\", \"non-inferiority\" \"equivalence\" test. test_type Character. \"2-side\", \"1-side\", \"non-inferiority\", \"equivalence\". Default \"2-side\".","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/two_mean_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size or Power for Two-Sample Mean Test — two_mean_size","text":"Numeric. Returns sample size (beta given), power (nA/nB given).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/two_mean_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample Size or Power for Two-Sample Mean Test — two_mean_size","text":"one beta (sample size calculation) nA/nB (power calculation) specified. Required arguments test_type: \"2-side\": sample size: muA, muB, sd, alpha, beta power: muA, muB, sd, alpha, nB \"1-side\": sample size: muA, muB, sdA, sdB, alpha, beta power: muA, muB, sdA, sdB, alpha, nA \"non-inferiority\"/\"equivalence\": sample size: muA, muB, delta, sd, alpha, beta power: muA, muB, delta, sd, alpha, nB","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/two_mean_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size or Power for Two-Sample Mean Test — two_mean_size","text":"","code":"# Sample size for `\"2-side\"` test two_mean_size(muA = 5, muB = 10, kappa = 1, sd = 10,               alpha = 0.05, beta = 0.2, test_type = \"2-side\") #> [1] 63  # Power of `\"2-side\"` test two_mean_size(muA = 5, muB = 10, kappa = 1, sd = 10,               alpha = 0.05, nB = 63, test_type = \"2-side\") #> [1] 0.8013024  # Sample size for `\"1-side\"` test two_mean_size(muA = 132.86, muB = 127.44, kappa = 2, sdA = 15.34, sdB = 18.23,               alpha = 0.05, beta = 0.2, test_type = \"1-side\") #> [1] 85  # Power of `\"1-sided\"` test two_mean_size(muA = 132.86, muB = 127.44, kappa = 2, sdA = 15.34, sdB = 18.23,               alpha = 0.05, nA = 85, test_type = \"1-side\") #> [1] 0.8020669  # Sample size for `\"non-inferiority\"` test two_mean_size(muA = 5, muB = 5, delta = 5, kappa = 1, sd = 10,               alpha = 0.05, beta = 0.2, test_type = \"non-inferiority\") #> [1] 50  # Power of `\"non-inferiority\"` test two_mean_size(muA = 5, muB = 5, delta = 5, kappa = 1, sd = 10,               alpha = 0.05, nB = 50, test_type = \"non-inferiority\") #> [1] 0.8037819  # Sample size for `\"equivalence\"` test two_mean_size(muA = 5, muB = 4, delta = 5, kappa = 1, sd = 10,               alpha = 0.05, beta = 0.2, test_type = \"equivalence\") #> [1] 108  # Power of `\"equivalence\"` test two_mean_size(muA = 5, muB = 4, delta = 5, kappa = 1, sd = 10,               alpha = 0.05, nB = 108, test_type = \"equivalence\") #> [1] 0.8045235"},{"path":"https://zarathucorp.github.io/rashnu/reference/two_prop_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Size or Power for Two-Sample Proportion Test — two_prop_size","title":"Sample Size or Power for Two-Sample Proportion Test — two_prop_size","text":"Calculates sample size power two-sample proportion test.","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/two_prop_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Size or Power for Two-Sample Proportion Test — two_prop_size","text":"","code":"two_prop_size(   pA,   pB,   delta = NULL,   kappa = 1,   alpha,   beta = NULL,   nB = NULL,   test_type = \"2-side\" )"},{"path":"https://zarathucorp.github.io/rashnu/reference/two_prop_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Size or Power for Two-Sample Proportion Test — two_prop_size","text":"pA Numeric. True proportion group . pB Numeric. True proportion group B. delta Numeric (optional). Margin \"non-inferiority\" \"equivalence\" test. Required \"non-inferiority\" \"equivalence\" test. kappa Numeric. Ratio sample sizes (nA/nB). Default 1. alpha Numeric. Type error rate. beta Numeric (optional). Type II error rate. Required sample size calculation. nB Integer (optional). Sample size group B. Required power calculation. test_type Character. \"2-side\", \"1-side\", \"non-inferiority\", \"equivalence\". Default \"2-side\".","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/two_prop_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Size or Power for Two-Sample Proportion Test — two_prop_size","text":"Numeric. Returns sample size (beta given), power (nB given).","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/two_prop_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sample Size or Power for Two-Sample Proportion Test — two_prop_size","text":"one beta (sample size calculation) nA/nB (power calculation) specified. Required arguments test_type: \"2-side\"/\"1-side\": sample size: pA, pB, alpha, beta power: pA, pB, alpha, nB \"non-inferiority\"/\"equivalence\": sample size: pA, pB, delta,  alpha, beta power: pA, pB, delta, alpha, nB","code":""},{"path":"https://zarathucorp.github.io/rashnu/reference/two_prop_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Size or Power for Two-Sample Proportion Test — two_prop_size","text":"","code":"# Sample size for `\"2-side\"` test two_prop_size(pA = 0.65, pB = 0.85, kappa = 1,               alpha = 0.05, beta = 0.2, test_type = \"2-side\") #> [1] 70  # Power of `\"2-side\"` test two_prop_size(pA = 0.65, pB = 0.85, kappa = 1,               alpha = 0.05, nB = 70, test_type = \"2-side\") #> [1] 0.8019139  # Sample size for `\"1-side\"` test two_prop_size(pA = 0.65, pB = 0.85, kappa = 1,               alpha = 0.05, beta = 0.2, test_type = \"1-side\") #> [1] 55  # Power of `\"1-sided\"` test two_prop_size(pA = 0.65, pB = 0.85, kappa = 1,               alpha = 0.05, nB = 55, test_type = \"1-side\") #> [1] 0.8008219  # Sample size for `\"non-inferiority\"` test two_prop_size(pA = 0.85, pB = 0.65, delta = -0.1, kappa = 1,               alpha = 0.05, beta = 0.2, test_type = \"non-inferiority\") #> [1] 25  # Power of `\"non-inferiority\"` test two_prop_size(pA = 0.85, pB = 0.65, delta = -0.1, kappa = 1,               alpha = 0.05, nB = 25, test_type = \"non-inferiority\") #> [1] 0.8085998  # Sample size for `\"equivalence\"` test two_prop_size(pA = 0.65, pB = 0.85, delta = 0.05, kappa = 1,               alpha = 0.05, beta = 0.2, test_type = \"equivalence\") #> [1] 136  # Power of `\"equivalence\"` test two_prop_size(pA = 0.65, pB = 0.85, delta = 0.05, kappa = 1,               alpha = 0.05, nB = 136, test_type = \"equivalence\") #> [1] 0.8033294"},{"path":"https://zarathucorp.github.io/rashnu/news/index.html","id":"rashnu-012","dir":"Changelog","previous_headings":"","what":"rashnu 0.1.2","title":"rashnu 0.1.2","text":"one_mean_size() two_mean_size() k_mean_size() one_prop_size() two_prop_size() pair_prop_size() k_prop_size() coxph_size() or_size() sccs_size() one_norm_size() one_bino_size() Added Rstudio Addin “Power Sample Size Calculator”","code":""},{"path":"https://zarathucorp.github.io/rashnu/news/index.html","id":"rashnu-011","dir":"Changelog","previous_headings":"","what":"rashnu 0.1.1","title":"rashnu 0.1.1","text":"CRAN release: 2025-06-18 Adjusted numericInput step size Shiny interface finer control input values.","code":""},{"path":"https://zarathucorp.github.io/rashnu/news/index.html","id":"rashnu-010","dir":"Changelog","previous_headings":"","what":"rashnu 0.1.0","title":"rashnu 0.1.0","text":"CRAN release: 2025-05-16","code":""},{"path":"https://zarathucorp.github.io/rashnu/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rashnu 0.1.0","text":"Initial release rashnu package. Includes interactive Shiny app rashnuBasic() sample size calculation. Two-group non-inferiority trials Two-group superiority trials (Lakatos method) One-sample survival test (transformation-based)","code":""},{"path":"https://zarathucorp.github.io/rashnu/news/index.html","id":"internal-improvements-0-1-0","dir":"Changelog","previous_headings":"","what":"Internal improvements","title":"rashnu 0.1.0","text":"Added unit tests using testthat. Ensured code ASCII-compliant CRAN-ready.","code":""}]
