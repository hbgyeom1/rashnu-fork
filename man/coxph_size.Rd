% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coxph_size.R
\name{coxph_size}
\alias{coxph_size}
\title{Sample Size or Power Calculation for Cox Proportional Hazards Model}
\usage{
coxph_size(
  hr,
  hr0 = NULL,
  delta = NULL,
  pE,
  pA,
  alpha,
  beta = NULL,
  n = NULL,
  test_type = "2-side"
)
}
\arguments{
\item{hr}{Numeric. Hazard ratio under the alternative hypothesis.}

\item{hr0}{Numeric (optional). Hazard ratio under the null hypothesis. Required for \code{"2-side"} and \code{"non-inferiority"} tests.}

\item{delta}{Numeric (optional). Equivalence margin on the log-hazard scale. Required for \code{"equivalence"} tests.}

\item{pE}{Numeric. Event rate (i.e., the proportion of subjects expected to experience the event).}

\item{pA}{Numeric. Proportion of participants in the active treatment group.}

\item{alpha}{Numeric. Significance level (Type I error rate).}

\item{beta}{Numeric (optional). Type II error rate (1 - power). Required when calculating required sample size.}

\item{n}{Integer (optional). Total sample size. Required when calculating power.}

\item{test_type}{Character. Type of hypothesis test. Must be one of \code{"2-side"}, \code{"non-inferiority"}, or \code{"equivalence"}.}
}
\value{
\itemize{
\item If \code{beta} is provided and \code{n} is NULL, returns the required total sample size (rounded up).
\item If \code{n} is provided and \code{beta} is NULL, returns the achieved power of the test.
}
}
\description{
This function calculates the required sample size or the achieved power for time-to-event analysis using the Cox proportional hazards model.
It supports two-sided, non-inferiority, and equivalence tests based on hazard ratios and event probabilities.
}
\details{
The function uses the log hazard ratio scale and standard normal approximation.
The sample size formula includes a term for \code{pE}, the proportion expected to have the event, and \code{pA}, the allocation proportion for the active group.
}
\examples{
# Required sample size for a two-sided test
coxph_size(hr = 0.75, hr0 = 1, pE = 0.6, pA = 0.5, alpha = 0.05, beta = 0.2, test_type = "2-side")

# Power of a non-inferiority test with given sample size
coxph_size(hr = 0.95, hr0 = 1, pE = 0.5, pA = 0.6, alpha = 0.025, n = 200, test_type = "non-inferiority")

}
